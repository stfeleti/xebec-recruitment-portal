@page "/additional"
@inject ILogger<AdditionalInfo> Logger
@inject NavigationManager NavigationManager
@inject IJSRuntime jsRuntime


<style>
    .wrapper {
        height: 100vh;
        width: 100%;
    }

    .nav {
        height: 10vh;
        background-color: lightgrey;
        width: 100%;
        display: flex;
    }

    .main-body {
        height: 90vh;
        width: 100%;
    }

    .progress-div {
        margin-top: 2.5%;
        height: 10%;
        margin-bottom: 2.5%;
        width: 60%;
        margin-left: 20%;
        margin-right: 20%;
        display: flex;
    }

    .progress-img {
        height: 100%;
        width: 10%;
        text-align: center;
    }

    .progress-line {
        height: 100%;
        width: 20%;
        text-align: center;
    }

    .form-div {
        height: auto;
        margin-bottom: 5%;
        width: 60%;
        margin-left: 20%;
        margin-right: 20%;
    }

    .main-form {
        height: 83.5%;
        width: 80%;
        margin-left: 10%;
        margin-right: 10%;
        margin-top: 2.5%;
        background-color: lightgrey;
        border: black 1px solid;
    }

    .div-buttons {
        margin-top: 1%;
        height: 10%;
        display: flex;
        align-content: center;
        text-align: center;
        margin-left: 20%;
        margin-right: 20%;
        width: 60%;
    }

    .form-group-first {
        margin-top: 5%;
        width: 40%;
        margin-left: 5%;
        margin-right: 2.5%;
    }

    .form-group-others {
        width: 40%;
        margin-left: 5%;
        margin-right: 2.5%;
    }

    .form-group-text-area {
        width: 70%;
        margin-left: 15%;
        margin-right: 15%;
    }

    .form-control-style {
        border: 2px darkgrey solid;
    }

    .form-control-text-area {
        border: 2px darkgrey solid;
        height: 400px;
        width: 100%;
    }

    .btn-previous {
        height: 100%;
        width: 60%;
        margin-left: 30%;
        margin-right: 10%;
        background-color: #22577A;
        border: transparent;
        border-radius: 10px;
    }

    .btn-next {
        height: 100%;
        width: 60%;
        margin-left: 10%;
        margin-right: 30%;
        background-color: #0B8457;
        border: transparent;
        border-radius: 10px;
    }

    .buttondivs {
        height: 80%;
        width: 50%;
        margin-bottom: 20%;
        border: none;
        color: white;
    }

        .buttondivs:hover {
            text-decoration: none;
        }

    .add-button-div {
        height: 10%;
        width: 40%;
        margin-left: 30%;
        margin-right: 30%;
        border: none;
        display: flex;
    }

    .add-button {
        width: 80px;
        margin-left: 35%;
        margin-right: 35%;
        height: 100%;
        border: transparent;
        border-radius: 10px;
        background-color: #28ABB9;
        color: white;
    }

    h1 {
        font-family: SigmarOne;
        font-size: 30px;
        text-align: center;
    }

    .material-icon {
        font-size: 50px;
        text-align: center;
        margin: 0;
    }

    .material-line {
        font-size: 50px;
        display: inline-block;
        width: 100%;
        text-align: center;
        margin: 0;
        height: 100%;
        background-color: maroon;
    }

    .no-material-line {
        font-size: 50px;
        display: inline-block;
        width: 100%;
        text-align: center;
        margin: 0;
        background-color: white;
    }

    .material-color {
        font-size: 50px;
        text-align: center;
        margin: 0;
        color: purple;
    }

    .material-none {
        font-size: 50px;
        text-align: center;
        margin: 0;
    }

    .no-form-icon {
        color: lightgrey;
    }

    .form-icon {
        color: black;
    }

    .labels-div {
        width: 90%;
        margin-left: 5%;
        margin-right: 5%;
        margin-top: 5px;
        display: flex;
        height: 30px;
    }

    label {
        margin-top: 5px;
        color: black;
        font-family: Calibri;
        font-size: 15px;
    }

    .mini-label1 {
        width: 40%;
        display: inline-block;
        margin-right: 9%;
        margin-left: 1%;
    }

    .mini-label2 {
        display: inline-block;
        width: 40%;
        margin-left: 4.5%;
    }

    h2 {
        text-decoration: none;
        font-family: Arial;
        font-size: 20px;
    }

    h3 {
        font-family: SigmarOne;
        font-size: 20px;
    }
</style>

<div class="wrapper">
    <div class="nav">
        <NavMenu/>
    </div>
    <div class="main-body">
        <div class="progress-div">
            <div class="progress-img">
                <i class="fa fa-user-circle material-none"></i>
            </div>
            <div class="progress-line">
            </div>
            <div class="progress-img">
                <i class="fa fa-graduation-cap material-none"></i>
            </div>
            <div class="progress-line">
            </div>
            <div class="progress-img">
                <i class="fa fa-briefcase material-none"></i>
            </div>
            <div class="progress-line">
            </div>
            <div class="progress-img">
                <i class="fa fa-laptop material-color"></i>
            </div>
        </div>
        <div class="form-div">
            <h1>Additional Information</h1>
            <form class="main-form">
                <div class="form-group form-check-inline form-group-first">
                    <i class="fa fa-github mr-2" style="color: black;"></i>
                    <input type="text" class="form-control form-control-style" id="github" placeholder="Github Link" @bind="AdditionalInformation.GitHubLink">
                    <input type="checkbox" class="form-check-input" style="margin-left: 5%;" id="github-check">
                </div>
                <div class="form-group form-check-inline form-group-others">
                    <i class="fa fa-facebook mr-2" style="color: #4267B2;"></i>
                    <input type="text" class="form-control form-control-style" id="facebook" placeholder="Facebook" @bind="AdditionalInformation.FacebookLink">
                    <input type="checkbox" class="form-check-input" style="margin-left: 5%;" id="facebook-check">

                </div><br>
                <div class="form-group form-check-inline form-group-others">
                    <i class="fa fa-linkedin mr-2" style="color:#0077b5"></i>
                    <input type="text" class="form-control form-control-style" id="linkedin" placeholder="LinkedIn" @bind="AdditionalInformation.LinkedInLink">
                    <input type="checkbox" class="form-check-input" style="margin-left: 5%;" id="linkedin-check">
                </div>
                <div class="form-group form-check-inline form-group-others">
                    <i class="fa fa-globe mr-1" style="color:orange;"></i>
                    <input type="text" class="form-control form-control-style" id="website" placeholder="Website" @bind="AdditionalInformation.PersonalWebsiteUrl">
                    <input type="checkbox" class="form-check-input" style="margin-left: 5%;" id="website-check">

                </div><br>

                <div class="form-group form-check-inline form-group-text-area">
 
                    <BlazorInputFile.InputFile class="dropzone" style="border: none;"id="fileInput" OnChange="@OnInputFileChange" accept="image/png,image/gif,image/jpeg,application/pdf,application/msword" />

                    <input type="checkbox" class="form-check-input" style="margin-left: 5%;" id="job-description-check">
                </div><br />
                <div class="form-group form-check-inline form-group-others">
                    @if (selectedFiles != null && selectedFiles.Count > 0)
                    {
                        <div class="drop-zone-button-div">
                            <ul>
                                @foreach (var file in selectedFiles)
                                {
                                    <li>
                                        @file.Name
                                        <button class="drop-zone-button" type="button" @onclick="@(e => RemoveFile(file))">Remove</button>
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                </div>
                <div class="add-button-div">
                    <button type="submit" class="add-button">Add</button>
                </div><br />
            </form>
            <form class="div-buttons">
                <NavLink class="buttondivs" href="/">
                    <div class="btn-previous">
                        <h2 class="nav-item">Previous</h2>
                    </div>
                </NavLink>
                <NavLink class="buttondivs" href="/">
                    <div class="btn-next">
                        <h2 class="nav-item">Submit</h2>
                    </div>
                </NavLink>
            </form>
        </div>
    </div>
</div>

@code{

    private string dropClass = "";
    private bool fileTypeError = false;
    private List<IFileListEntry> selectedFiles = new List<IFileListEntry>();

    /*private void HandleDragEnter()
    {
        dropClass = "dropzone-drag";
    }

    private void HandleDragLeave()
    {
        dropClass = "";
    }*/

    private async Task OnInputFileChange(IFileListEntry[] files)
    {
        dropClass = "";
        fileTypeError = false;
        List<string> acceptedFileTypes = new List<string>() { "image/png", "image/jpeg", "image/gif", "application/pdf", "application/msword" };
        if (files != null)
        {
            foreach (var file in files)
            {
                bool error = false;

                if (!acceptedFileTypes.Contains(file.Type))
                {
                    error = true;
                    fileTypeError = true;
                }

                //keep the good files
                if (!error)
                {
                    selectedFiles.Add(file);
                }
            }
        }
        await base.OnInitializedAsync();
    }

    private void RemoveFile(IFileListEntry file)
    {
        selectedFiles.Remove(file);
    }

    public AdditionalInformation AdditionalInformation { get; set; } = new AdditionalInformation();
}

